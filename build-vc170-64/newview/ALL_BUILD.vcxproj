<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{C83EF64C-C01C-39D5-91EF-CB3E667B1F5C}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.26100.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\work\slfirestorm\build-vc170-64\newview;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\work\slfirestorm\build-vc170-64\newview;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\work\slfirestorm\indra\newview\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/work/slfirestorm/indra/newview/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SD:/work/slfirestorm/indra -BD:/work/slfirestorm/build-vc170-64 --check-stamp-file D:/work/slfirestorm/build-vc170-64/newview/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPython\Support.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPython3.cmake;D:\work\slfirestorm\indra\cmake\00-Common.cmake;D:\work\slfirestorm\indra\cmake\APR.cmake;D:\work\slfirestorm\indra\cmake\Audio.cmake;D:\work\slfirestorm\indra\cmake\Boost.cmake;D:\work\slfirestorm\indra\cmake\BuildPackagesInfo.cmake;D:\work\slfirestorm\indra\cmake\BuildVersion.cmake;D:\work\slfirestorm\indra\cmake\CMakeCopyIfDifferent.cmake;D:\work\slfirestorm\indra\cmake\CURL.cmake;D:\work\slfirestorm\indra\cmake\ColladaDom.cmake;D:\work\slfirestorm\indra\cmake\CubemapToEquirectangularJS.cmake;D:\work\slfirestorm\indra\cmake\Discord.cmake;D:\work\slfirestorm\indra\cmake\DragDrop.cmake;D:\work\slfirestorm\indra\cmake\EXPAT.cmake;D:\work\slfirestorm\indra\cmake\FMODSTUDIO.cmake;D:\work\slfirestorm\indra\cmake\FindAutobuild.cmake;D:\work\slfirestorm\indra\cmake\FreeType.cmake;D:\work\slfirestorm\indra\cmake\GLEXT.cmake;D:\work\slfirestorm\indra\cmake\GLH.cmake;D:\work\slfirestorm\indra\cmake\GLIB.cmake;D:\work\slfirestorm\indra\cmake\GLOD.cmake;D:\work\slfirestorm\indra\cmake\Growl.cmake;D:\work\slfirestorm\indra\cmake\Hunspell.cmake;D:\work\slfirestorm\indra\cmake\JPEGEncoderBasic.cmake;D:\work\slfirestorm\indra\cmake\LLAppearance.cmake;D:\work\slfirestorm\indra\cmake\LLAudio.cmake;D:\work\slfirestorm\indra\cmake\LLCA.cmake;D:\work\slfirestorm\indra\cmake\LLCommon.cmake;D:\work\slfirestorm\indra\cmake\LLCoreHttp.cmake;D:\work\slfirestorm\indra\cmake\LLImage.cmake;D:\work\slfirestorm\indra\cmake\LLKDU.cmake;D:\work\slfirestorm\indra\cmake\LLPhysicsExtensions.cmake;D:\work\slfirestorm\indra\cmake\LLPrimitive.cmake;D:\work\slfirestorm\indra\cmake\LLWindow.cmake;D:\work\slfirestorm\indra\cmake\Linking.cmake;D:\work\slfirestorm\indra\cmake\NDOF.cmake;D:\work\slfirestorm\indra\cmake\NGHTTP2.cmake;D:\work\slfirestorm\indra\cmake\NVAPI.cmake;D:\work\slfirestorm\indra\cmake\OPENAL.cmake;D:\work\slfirestorm\indra\cmake\OpenGL.cmake;D:\work\slfirestorm\indra\cmake\OpenSSL.cmake;D:\work\slfirestorm\indra\cmake\OpenXR.cmake;D:\work\slfirestorm\indra\cmake\PNG.cmake;D:\work\slfirestorm\indra\cmake\Prebuilt.cmake;D:\work\slfirestorm\indra\cmake\Python.cmake;D:\work\slfirestorm\indra\cmake\TemplateCheck.cmake;D:\work\slfirestorm\indra\cmake\ThreeJS.cmake;D:\work\slfirestorm\indra\cmake\TinyEXR.cmake;D:\work\slfirestorm\indra\cmake\Tracy.cmake;D:\work\slfirestorm\indra\cmake\UI.cmake;D:\work\slfirestorm\indra\cmake\Variables.cmake;D:\work\slfirestorm\indra\cmake\ViewerMiscLibs.cmake;D:\work\slfirestorm\indra\cmake\VisualLeakDetector.cmake;D:\work\slfirestorm\indra\cmake\VulkanGltf.cmake;D:\work\slfirestorm\indra\cmake\ZLIBNG.cmake;D:\work\slfirestorm\indra\cmake\bugsplat.cmake;D:\work\slfirestorm\indra\cmake\jemalloc.cmake;D:\work\slfirestorm\indra\cmake\xxHash.cmake;D:\work\slfirestorm\indra\newview\exoflickrkeys.h.in;D:\work\slfirestorm\indra\newview\fsdiscordkey.h.in;D:\work\slfirestorm\indra\newview\fsversionvalues.h.in;D:\work\slfirestorm\indra\newview\res\viewerRes.rc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\work\slfirestorm\build-vc170-64\newview\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/work/slfirestorm/indra/newview/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SD:/work/slfirestorm/indra -BD:/work/slfirestorm/build-vc170-64 --check-stamp-file D:/work/slfirestorm/build-vc170-64/newview/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPython\Support.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPython3.cmake;D:\work\slfirestorm\indra\cmake\00-Common.cmake;D:\work\slfirestorm\indra\cmake\APR.cmake;D:\work\slfirestorm\indra\cmake\Audio.cmake;D:\work\slfirestorm\indra\cmake\Boost.cmake;D:\work\slfirestorm\indra\cmake\BuildPackagesInfo.cmake;D:\work\slfirestorm\indra\cmake\BuildVersion.cmake;D:\work\slfirestorm\indra\cmake\CMakeCopyIfDifferent.cmake;D:\work\slfirestorm\indra\cmake\CURL.cmake;D:\work\slfirestorm\indra\cmake\ColladaDom.cmake;D:\work\slfirestorm\indra\cmake\CubemapToEquirectangularJS.cmake;D:\work\slfirestorm\indra\cmake\Discord.cmake;D:\work\slfirestorm\indra\cmake\DragDrop.cmake;D:\work\slfirestorm\indra\cmake\EXPAT.cmake;D:\work\slfirestorm\indra\cmake\FMODSTUDIO.cmake;D:\work\slfirestorm\indra\cmake\FindAutobuild.cmake;D:\work\slfirestorm\indra\cmake\FreeType.cmake;D:\work\slfirestorm\indra\cmake\GLEXT.cmake;D:\work\slfirestorm\indra\cmake\GLH.cmake;D:\work\slfirestorm\indra\cmake\GLIB.cmake;D:\work\slfirestorm\indra\cmake\GLOD.cmake;D:\work\slfirestorm\indra\cmake\Growl.cmake;D:\work\slfirestorm\indra\cmake\Hunspell.cmake;D:\work\slfirestorm\indra\cmake\JPEGEncoderBasic.cmake;D:\work\slfirestorm\indra\cmake\LLAppearance.cmake;D:\work\slfirestorm\indra\cmake\LLAudio.cmake;D:\work\slfirestorm\indra\cmake\LLCA.cmake;D:\work\slfirestorm\indra\cmake\LLCommon.cmake;D:\work\slfirestorm\indra\cmake\LLCoreHttp.cmake;D:\work\slfirestorm\indra\cmake\LLImage.cmake;D:\work\slfirestorm\indra\cmake\LLKDU.cmake;D:\work\slfirestorm\indra\cmake\LLPhysicsExtensions.cmake;D:\work\slfirestorm\indra\cmake\LLPrimitive.cmake;D:\work\slfirestorm\indra\cmake\LLWindow.cmake;D:\work\slfirestorm\indra\cmake\Linking.cmake;D:\work\slfirestorm\indra\cmake\NDOF.cmake;D:\work\slfirestorm\indra\cmake\NGHTTP2.cmake;D:\work\slfirestorm\indra\cmake\NVAPI.cmake;D:\work\slfirestorm\indra\cmake\OPENAL.cmake;D:\work\slfirestorm\indra\cmake\OpenGL.cmake;D:\work\slfirestorm\indra\cmake\OpenSSL.cmake;D:\work\slfirestorm\indra\cmake\OpenXR.cmake;D:\work\slfirestorm\indra\cmake\PNG.cmake;D:\work\slfirestorm\indra\cmake\Prebuilt.cmake;D:\work\slfirestorm\indra\cmake\Python.cmake;D:\work\slfirestorm\indra\cmake\TemplateCheck.cmake;D:\work\slfirestorm\indra\cmake\ThreeJS.cmake;D:\work\slfirestorm\indra\cmake\TinyEXR.cmake;D:\work\slfirestorm\indra\cmake\Tracy.cmake;D:\work\slfirestorm\indra\cmake\UI.cmake;D:\work\slfirestorm\indra\cmake\Variables.cmake;D:\work\slfirestorm\indra\cmake\ViewerMiscLibs.cmake;D:\work\slfirestorm\indra\cmake\VisualLeakDetector.cmake;D:\work\slfirestorm\indra\cmake\VulkanGltf.cmake;D:\work\slfirestorm\indra\cmake\ZLIBNG.cmake;D:\work\slfirestorm\indra\cmake\bugsplat.cmake;D:\work\slfirestorm\indra\cmake\jemalloc.cmake;D:\work\slfirestorm\indra\cmake\xxHash.cmake;D:\work\slfirestorm\indra\newview\exoflickrkeys.h.in;D:\work\slfirestorm\indra\newview\fsdiscordkey.h.in;D:\work\slfirestorm\indra\newview\fsversionvalues.h.in;D:\work\slfirestorm\indra\newview\res\viewerRes.rc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\work\slfirestorm\build-vc170-64\newview\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\work\slfirestorm\build-vc170-64\ZERO_CHECK.vcxproj">
      <Project>{9DA13250-D6C5-3A08-8DFD-52EF5BA53FFE}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\work\slfirestorm\build-vc170-64\newview\copy_w_viewer_manifest.vcxproj">
      <Project>{22E1424A-86A4-300D-87B5-327CC5BC5C24}</Project>
      <Name>copy_w_viewer_manifest</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\work\slfirestorm\build-vc170-64\newview\firestorm-bin.vcxproj">
      <Project>{9BDF0509-D464-3264-8ACE-242E170B258B}</Project>
      <Name>firestorm-bin</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>